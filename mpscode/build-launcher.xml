<project name="MpsServer-launcher" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.mps.config.path" location="${build.dir}/config" />
  <property name="build.mps.system.path" location="${build.dir}/system" />
  <property name="build.tmp" location="${build.dir}/tmp/MpsServer-launcher" />
  <property name="build.layout" location="${build.dir}/artifacts/MpsServer-launcher" />
  <property name="MPSServerVersion" value="1.0.0" />
  <property name="project.home" location="${basedir}" />
  <property name="artifacts.root" location="${basedir}/artifacts" />
  <property name="mps.home" location="" />
  <property name="artifacts.mps" location="${mps.home}" />
  <property name="artifacts.mpsStandalone" location="${mps.home}" />
  <property name="artifacts.mpsPlugins" location="${mps.home}" />
  <property name="artifacts.mpsCore" location="${mps.home}" />
  <property name="artifacts.mpsWorkbench" location="${mps.home}" />
  <property name="artifacts.mpsJavaPlatform" location="${mps.home}" />
  <property name="artifacts.mpsJavaWorkbench" location="${mps.home}" />
  <property name="artifacts.mpsDistribution" location="${mps.home}" />
  <property name="artifacts.MpsServer-server" location="${build.dir}/artifacts/MpsServer-server" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property file="${artifacts.MpsServer-server}/build.properties" prefix="import.MpsServer-server" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="MpsServer-server.MPSServerVersion" value="${import.MpsServer-server.MpsServer-server.MPSServerVersion}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <pathelement location="${artifacts.mps}/lib/jdom.jar" />
    <pathelement location="${artifacts.mps}/lib/log4j.jar" />
  </path>
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/com.strumenta.mpsserver.launcher.jar" />
    <mkdir dir="${build.tmp}/default/com.strumenta.mpsserver.launcher.jar/META-INF" />
    <echoxml file="${build.tmp}/default/com.strumenta.mpsserver.launcher.jar/META-INF/module.xml">
      <module namespace="com.strumenta.mpsserver.launcher" type="solution" uuid="3228605e-7b74-4057-911c-041cdcc16947">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" />
          <module ref="a3e4657f-a76c-45bb-bbda-c764596ecc65(jetbrains.mps.baseLanguage.logging.runtime)" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" />
        </dependencies>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="com.strumenta.mpsserver.launcher-src.jar" descriptor="com.strumenta.mpsserver.launcher.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/com.strumenta.mpsserver.launcher.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/com.strumenta.mpsserver.launcher" />
      <fileset dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/com.strumenta.mpsserver.launcher.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-com.strumenta.mpsserver.launcher-models">
      <fileset dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/com.strumenta.mpsserver.launcher-src.jar" duplicate="preserve">
      <fileset dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/solutions/com.strumenta.mpsserver.launcher/com.strumenta.mpsserver.launcher.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-com.strumenta.mpsserver.launcher-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.properties">MpsServer-launcher.MPSServerVersion=${MPSServerVersion}${line.separator}mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}${line.separator}MpsServer-server.MPSServerVersion=${MpsServer-server.MPSServerVersion}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build-server.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies">
    <mkdir dir="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip" />
    <unzip src="${artifacts.MpsServer-server}/MpsServer-${MpsServer-server.MPSServerVersion}.zip" dest="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip" />
  </target>
  
  <target name="build" depends="assemble, run-mps-code" />
  
  <target name="clean">
    <delete dir="${build.mps.config.path}" />
    <delete dir="${build.mps.system.path}" />
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.com.strumenta.mpsserver.launcher" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate strictMode="false" parallelMode="true" parallelThreads="8" useInplaceTransform="true" hideWarnings="false" createStaticRefs="true" fork="true" targetJavaVersion="1.8" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}">
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" />
      <plugin path="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/lib/mps-behavior-api.jar" />
      <library file="${artifacts.mps}/lib/mps-closures.jar" />
      <library file="${artifacts.mps}/lib/mps-collections.jar" />
      <library file="${artifacts.mps}/lib/mps-core.jar" />
      <library file="${artifacts.mps}/lib/mps-editor.jar" />
      <library file="${artifacts.mps}/lib/mps-environment.jar" />
      <library file="${artifacts.mps}/lib/mps-openapi.jar" />
      <library file="${artifacts.mps}/lib/mps-platform.jar" />
      <library file="${artifacts.mps}/lib/mps-references.jar" />
      <library file="${artifacts.mps}/lib/mps-tuples.jar" />
      <library file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.deps.jar" />
      <library file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.server.jar" />
      <chunk>
        <module file="${basedir}/solutions/com.strumenta.mpsserver.launcher/com.strumenta.mpsserver.launcher.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="project.home" path="${project.home}" />
      <macro name="artifacts.root" path="${artifacts.root}" />
      <macro name="mps.home" path="${mps.home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="makeDependents">
    <ant antfile="build-server.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
  </target>
  
  <target name="run-mps-code" depends="assemble, run.com.strumenta.mpsserver.launcher" />
  
  <target name="java.compile.com.strumenta.mpsserver.launcher" depends="fetchDependencies">
    <mkdir dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen" />
    <mkdir dir="${build.tmp}/java/out/com.strumenta.mpsserver.launcher" />
    <javac destdir="${build.tmp}/java/out/com.strumenta.mpsserver.launcher" fork="false" encoding="utf8" includeantruntime="false" debug="true" source="1.8" target="1.8">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mps}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mps}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/log4j.jar" />
        <fileset file="${artifacts.mps}/lib/jdom.jar" />
        <fileset file="${artifacts.mps}/lib/trove4j.jar" />
        <fileset file="${artifacts.mps}/lib/ecj-4.10.jar" />
        <fileset file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.deps.jar" />
        <fileset file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.server.jar" />
        <fileset file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
        <fileset file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/libs/mpsserver-dependencies-0.1-SNAPSHOT.jar" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/com.strumenta.mpsserver.launcher">
      <fileset dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="run.com.strumenta.mpsserver.launcher" depends="assemble">
    <echo message="Running code from com.strumenta.mpsserver.launcher solution in MPS" />
    <runMPS solution="3228605e-7b74-4057-911c-041cdcc16947(com.strumenta.mpsserver.launcher)" startClass="com.strumenta.mpsserver.launcher.MainClass" startMethod="mpsMain">
      <plugin path="${artifacts.mps}/plugins/mps-build" id="jetbrains.mps.build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" id="jetbrains.mps.core" />
      <plugin path="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer" id="MPSServer" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk8.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.overloadedOperators.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.access.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/lib/mps-behavior-api.jar" />
      <library file="${artifacts.mps}/lib/mps-closures.jar" />
      <library file="${artifacts.mps}/lib/mps-collections.jar" />
      <library file="${artifacts.mps}/lib/mps-core.jar" />
      <library file="${artifacts.mps}/lib/mps-editor.jar" />
      <library file="${artifacts.mps}/lib/mps-environment.jar" />
      <library file="${artifacts.mps}/lib/mps-openapi.jar" />
      <library file="${artifacts.mps}/lib/mps-platform.jar" />
      <library file="${artifacts.mps}/lib/mps-references.jar" />
      <library file="${artifacts.mps}/lib/mps-tuples.jar" />
      <library file="${build.layout}/com.strumenta.mpsserver.launcher.jar" />
      <library file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.deps.jar" />
      <library file="${build.tmp}/deps/MpsServer-server/MpsServer-_dl__lbrace_MPSServerVersion_rbrace_.zip/MPSServer/languages/MPSServer/com.strumenta.mpsserver.server.jar" />
      <macro name="project.home" path="${project.home}" />
      <macro name="artifacts.root" path="${artifacts.root}" />
      <macro name="mps.home" path="${mps.home}" />
      
      <jvmargs>
        <arg value="-Didea.config.path=${build.mps.config.path}" />
        <arg value="-Didea.system.path=${build.mps.system.path}" />
        <arg value="-ea" />
        <arg value="-Xmx512m" />
      </jvmargs>
      
    </runMPS>
  </target>
  
  <target name="cleanSources">
    <delete dir="${project.home}/solutions/com.strumenta.mpsserver.launcher/source_gen" />
  </target>
</project>